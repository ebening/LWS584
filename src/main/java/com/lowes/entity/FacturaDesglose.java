package com.lowes.entity;
// Generated 28/12/2015 05:50:04 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.StringEscapeUtils;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

/**
 * FacturaDesglose generated by hbm2java
 */
@Entity
@Table(name = "FACTURA_DESGLOSE", schema = "LWS584")
public class FacturaDesglose implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private int idFacturaDesglose;
	private Aid aid;
	private CategoriaMayor categoriaMayor;
	private CategoriaMenor categoriaMenor;
	private CuentaContable cuentaContable;
	private Factura factura;
	private Locacion locacion;
	private String concepto;
	private BigDecimal subtotal;
	private short activo;
	private Date creacionFecha;
	private int creacionUsuario;
	private Date modificacionFecha;
	private Integer modificacionUsuario;
	private BigDecimal otrosImpuestos;
	private ViajeConcepto viajeConcepto;
	private ViajeTipoAlimentos viajeTipoAlimentos;
	private String nombre;

	public FacturaDesglose() {
	}
	
	public FacturaDesglose(int idFacturaDesglose) {
		this.idFacturaDesglose = idFacturaDesglose;
	}


	public FacturaDesglose(int idFacturaDesglose, Aid aid, CategoriaMayor categoriaMayor, CategoriaMenor categoriaMenor,
			CuentaContable cuentaContable, Factura factura, Locacion locacion, String concepto, BigDecimal subtotal,
			short activo, Date creacionFecha, int creacionUsuario) {
		this.idFacturaDesglose = idFacturaDesglose;
		this.aid = aid;
		this.categoriaMayor = categoriaMayor;
		this.categoriaMenor = categoriaMenor;
		this.cuentaContable = cuentaContable;
		this.factura = factura;
		this.locacion = locacion;
		this.concepto = concepto;
		this.subtotal = subtotal;
		this.activo = activo;
		this.creacionFecha = creacionFecha;
		this.creacionUsuario = creacionUsuario;
	}

	public FacturaDesglose(int idFacturaDesglose, Aid aid, CategoriaMayor categoriaMayor, CategoriaMenor categoriaMenor,
			CuentaContable cuentaContable, Factura factura, Locacion locacion, String concepto, BigDecimal subtotal,
			short activo, Date creacionFecha, int creacionUsuario, Date modificacionFecha,
			Integer modificacionUsuario) {
		this.idFacturaDesglose = idFacturaDesglose;
		this.aid = aid;
		this.categoriaMayor = categoriaMayor;
		this.categoriaMenor = categoriaMenor;
		this.cuentaContable = cuentaContable;
		this.factura = factura;
		this.locacion = locacion;
		this.concepto = concepto;
		this.subtotal = subtotal;
		this.activo = activo;
		this.creacionFecha = creacionFecha;
		this.creacionUsuario = creacionUsuario;
		this.modificacionFecha = modificacionFecha;
		this.modificacionUsuario = modificacionUsuario;
	}

	@Id
	@GeneratedValue (strategy = GenerationType.AUTO)
	@Column(name = "ID_FACTURA_DESGLOSE", unique = true, nullable = false)
	public int getIdFacturaDesglose() {
		return this.idFacturaDesglose;
	}

	public void setIdFacturaDesglose(int idFacturaDesglose) {
		this.idFacturaDesglose = idFacturaDesglose;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_AID")
	public Aid getAid() {
		return this.aid;
	}

	public void setAid(Aid aid) {
		this.aid = aid;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_CATEGORIA_MAYOR")
	public CategoriaMayor getCategoriaMayor() {
		return this.categoriaMayor;
	}

	public void setCategoriaMayor(CategoriaMayor categoriaMayor) {
		this.categoriaMayor = categoriaMayor;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_CATEGORIA_MENOR")
	public CategoriaMenor getCategoriaMenor() {
		return this.categoriaMenor;
	}

	public void setCategoriaMenor(CategoriaMenor categoriaMenor) {
		this.categoriaMenor = categoriaMenor;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_CUENTA_CONTABLE", nullable = false)
	public CuentaContable getCuentaContable() {
		return this.cuentaContable;
	}

	public void setCuentaContable(CuentaContable cuentaContable) {
		this.cuentaContable = cuentaContable;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_FACTURA", nullable = false)
	public Factura getFactura() {
		return this.factura;
	}

	public void setFactura(Factura factura) {
		this.factura = factura;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_LOCACION", nullable = false)
	public Locacion getLocacion() {
		return this.locacion;
	}

	public void setLocacion(Locacion locacion) {
		this.locacion = locacion;
	}

	@Column(name = "CONCEPTO", nullable = false, length = 500)
	public String getConcepto() {
		return this.concepto;
	}

	public void setConcepto(String concepto) {
		this.concepto = concepto;
	}

	@Column(name = "SUBTOTAL", nullable = false, precision = 5)
	public BigDecimal getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(BigDecimal subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "ACTIVO", nullable = false)
	public short getActivo() {
		return this.activo;
	}

	public void setActivo(short activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREACION_FECHA", length = 26)
	public Date getCreacionFecha() {
		return this.creacionFecha;
	}

	public void setCreacionFecha(Date creacionFecha) {
		this.creacionFecha = creacionFecha;
	}

	@Column(name = "CREACION_USUARIO")
	public int getCreacionUsuario() {
		return this.creacionUsuario;
	}

	public void setCreacionUsuario(int creacionUsuario) {
		this.creacionUsuario = creacionUsuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFICACION_FECHA", length = 26)
	public Date getModificacionFecha() {
		return this.modificacionFecha;
	}

	public void setModificacionFecha(Date modificacionFecha) {
		this.modificacionFecha = modificacionFecha;
	}

	@Column(name = "MODIFICACION_USUARIO")
	public Integer getModificacionUsuario() {
		return this.modificacionUsuario;
	}

	public void setModificacionUsuario(Integer modificacionUsuario) {
		this.modificacionUsuario = modificacionUsuario;
	}
	
	@Column(name = "OTROS_IMPUESTOS", precision = 17)
	public BigDecimal getOtrosImpuestos() {
		return this.otrosImpuestos;
	}

	public void setOtrosImpuestos(BigDecimal otrosImpuestos) {
		this.otrosImpuestos = otrosImpuestos;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CONCEPTO_VIAJE")
	public ViajeConcepto getViajeConcepto() {
		return this.viajeConcepto;
	}

	public void setViajeConcepto(ViajeConcepto viajeConcepto) {
		this.viajeConcepto = viajeConcepto;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VIAJE_TIPO_ALIMENTOS")
	public ViajeTipoAlimentos getViajeTipoAlimentos() {
		return this.viajeTipoAlimentos;
	}

	public void setViajeTipoAlimentos(ViajeTipoAlimentos viajeTipoAlimentos) {
		this.viajeTipoAlimentos = viajeTipoAlimentos;
	}
	
	@Column(name = "NOMBRE", length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

}
