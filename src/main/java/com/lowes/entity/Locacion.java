package com.lowes.entity;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

/**
 * Locacion generated by hbm2java
 */
@Entity
@Table(name = "LOCACION", schema = "LWS584")
public class Locacion implements java.io.Serializable {

	private static final long serialVersionUID = 7519220509565616711L;
	
	private int idLocacion;
	private TipoLocacion tipoLocacion;
	private String descripcion;
	private int numero;
	private short activo;
	private Date creacionFecha;
	private int creacionUsuario;
	private Date modificacionFecha;
	private Integer modificacionUsuario;
	private String numeroDescripcionLocacion;
	private Usuario director;
	
//	ID's de objetos 
	private int idTipoLocacion;

	public Locacion() {
	}
	
	public Locacion(int idLocacion){
		this.idLocacion = idLocacion;
	}

	public Locacion(int idLocacion, TipoLocacion tipoLocacion, String descripcion, int numero, short activo,
			Date creacionFecha, int creacionUsuario) {
		this.idLocacion = idLocacion;
		this.tipoLocacion = tipoLocacion;
		this.descripcion = descripcion;
		this.numero = numero;
		this.activo = activo;
		this.creacionFecha = creacionFecha;
		this.creacionUsuario = creacionUsuario;
	}
	
	public Locacion(int idLocacion,String descripcion){
		this.idLocacion = idLocacion;
		this.descripcion = descripcion;
	}

	public Locacion(int idLocacion, TipoLocacion tipoLocacion, String descripcion, int numero, short activo,
			Date creacionFecha, int creacionUsuario, Date modificacionFecha, Integer modificacionUsuario) {
		this.idLocacion = idLocacion;
		this.tipoLocacion = tipoLocacion;
		this.descripcion = descripcion;
		this.numero = numero;
		this.activo = activo;
		this.creacionFecha = creacionFecha;
		this.creacionUsuario = creacionUsuario;
		this.modificacionFecha = modificacionFecha;
		this.modificacionUsuario = modificacionUsuario;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "ID_LOCACION", unique = true, nullable = false)
	public int getIdLocacion() {
		return this.idLocacion;
	}

	public void setIdLocacion(int idLocacion) {
		this.idLocacion = idLocacion;
	}

	@LazyCollection(LazyCollectionOption.FALSE)
	@ManyToOne
	@JoinColumn(name = "ID_TIPO_LOCACION", nullable = false)
	public TipoLocacion getTipoLocacion() {
		return this.tipoLocacion;
	}

	public void setTipoLocacion(TipoLocacion tipoLocacion) {
		this.tipoLocacion = tipoLocacion;
	}

	@Column(name = "DESCRIPCION", nullable = false, length = 100)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "NUMERO", nullable = false)
	public int getNumero() {
		return this.numero;
	}

	public void setNumero(int numero) {
		this.numero = numero;
	}

	@Column(name = "ACTIVO", nullable = false)
	public short getActivo() {
		return this.activo;
	}

	public void setActivo(short activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREACION_FECHA", nullable = false, length = 26)
	public Date getCreacionFecha() {
		return this.creacionFecha;
	}

	public void setCreacionFecha(Date creacionFecha) {
		this.creacionFecha = creacionFecha;
	}

	@Column(name = "CREACION_USUARIO", nullable = false)
	public int getCreacionUsuario() {
		return this.creacionUsuario;
	}

	public void setCreacionUsuario(int creacionUsuario) {
		this.creacionUsuario = creacionUsuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MODIFICACION_FECHA", length = 26)
	public Date getModificacionFecha() {
		return this.modificacionFecha;
	}

	public void setModificacionFecha(Date modificacionFecha) {
		this.modificacionFecha = modificacionFecha;
	}

	@Column(name = "MODIFICACION_USUARIO")
	public Integer getModificacionUsuario() {
		return this.modificacionUsuario;
	}

	public void setModificacionUsuario(Integer modificacionUsuario) {
		this.modificacionUsuario = modificacionUsuario;
	}

	@Transient
	public int getIdTipoLocacion() {
		return idTipoLocacion;
	}

	public void setIdTipoLocacion(int idTipoLocacion) {
		this.idTipoLocacion = idTipoLocacion;
	}
	
	@Transient
	public String getNumeroDescripcionLocacion() {
		numeroDescripcionLocacion = String.valueOf(this.numero) + " - " + this.descripcion;
		return numeroDescripcionLocacion;
	}

	public void setNumeroDescripcionLocacion(String numeroDescripcionLocacion) {
		this.numeroDescripcionLocacion = numeroDescripcionLocacion;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DIRECTOR")
	public Usuario getDirector() {
		return this.director;
	}

	public void setDirector(Usuario director) {
		this.director = director;
	}

}